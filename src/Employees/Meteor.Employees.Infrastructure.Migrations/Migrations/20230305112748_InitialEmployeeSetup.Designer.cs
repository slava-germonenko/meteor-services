// <auto-generated />
using System;
using Meteor.Employees.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Meteor.Employees.Infrastructure.Migrations.Migrations
{
    [DbContext(typeof(EmployeesContext))]
    [Migration("20230305112748_InitialEmployeeSetup")]
    partial class InitialEmployeeSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Meteor.Employees.Core.Models.CustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("name");

                    b.Property<bool>("Required")
                        .HasColumnType("boolean")
                        .HasColumnName("required");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<bool>("Unique")
                        .HasColumnType("boolean")
                        .HasColumnName("unique");

                    b.HasKey("Id")
                        .HasName("pk_custom_fields");

                    b.HasAlternateKey("Name")
                        .HasName("ak_custom_fields_name");

                    b.ToTable("custom_fields", (string)null);
                });

            modelBuilder.Entity("Meteor.Employees.Core.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("email_address");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("middle_name");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("bytea")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("bytea")
                        .HasColumnName("password_salt");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_employees");

                    b.HasAlternateKey("EmailAddress")
                        .HasName("ak_employees_email_address");

                    b.HasAlternateKey("PhoneNumber")
                        .HasName("ak_employees_phone_number");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("Meteor.Employees.Core.Models.EmployeeField", b =>
                {
                    b.Property<int>("CustomFieldId")
                        .HasColumnType("integer")
                        .HasColumnName("custom_field_id");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employee_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("CustomFieldId", "EmployeeId")
                        .HasName("pk_employee_fields");

                    b.HasIndex("EmployeeId")
                        .HasDatabaseName("ix_employee_fields_employee_id");

                    b.ToTable("employee_fields", (string)null);
                });

            modelBuilder.Entity("Meteor.Employees.Core.Models.StatusChangeReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("change_date");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employee_id");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<int>("SourceStatus")
                        .HasColumnType("integer")
                        .HasColumnName("source_status");

                    b.Property<int>("TargetStatus")
                        .HasColumnType("integer")
                        .HasColumnName("target_status");

                    b.HasKey("Id")
                        .HasName("pk_status_change_reasons");

                    b.HasIndex("EmployeeId")
                        .HasDatabaseName("ix_status_change_reasons_employee_id");

                    b.ToTable("status_change_reasons", (string)null);
                });

            modelBuilder.Entity("Meteor.Employees.Core.Models.EmployeeField", b =>
                {
                    b.HasOne("Meteor.Employees.Core.Models.CustomField", "Field")
                        .WithMany()
                        .HasForeignKey("CustomFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_employee_fields_custom_fields_field_id");

                    b.HasOne("Meteor.Employees.Core.Models.Employee", null)
                        .WithMany("CustomFields")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_employee_fields_employees_employee_id");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("Meteor.Employees.Core.Models.StatusChangeReason", b =>
                {
                    b.HasOne("Meteor.Employees.Core.Models.Employee", null)
                        .WithMany("StatusChanges")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_status_change_reasons_employees_employee_id");
                });

            modelBuilder.Entity("Meteor.Employees.Core.Models.Employee", b =>
                {
                    b.Navigation("CustomFields");

                    b.Navigation("StatusChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
